package com.platform.advertising;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import sxp.android.framework.data.BaseData;
import sxp.android.framework.util.JsonUtil;

import com.platform.advertising.http.HttpAgeClient;
import com.platform.advertising.sqlite.GreenDaoService;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table AGE.
 */
public class Age implements BaseData {
	private static final long serialVersionUID = 1L;
	private Long id;
	private String idStr;
	private String createTime;
	private String updateTime;
	private String sort;
	private String name;
	private String value;
	private String jp;
	private String qp;
	private String remark;

	public Age() {
	}

	public Age(Long id) {
		this.id = id;
	}

	public Age(Long id, String idStr, String createTime, String updateTime,
			String sort, String name, String value, String jp, String qp,
			String remark) {
		this.id = id;
		this.idStr = idStr;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.sort = sort;
		this.name = name;
		this.value = value;
		this.jp = jp;
		this.qp = qp;
		this.remark = remark;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getIdStr() {
		return idStr;
	}

	public void setIdStr(String idStr) {
		this.idStr = idStr;
	}

	public String getCreateTime() {
		return createTime;
	}

	public void setCreateTime(String createTime) {
		this.createTime = createTime;
	}

	public String getUpdateTime() {
		return updateTime;
	}

	public void setUpdateTime(String updateTime) {
		this.updateTime = updateTime;
	}

	public String getSort() {
		return sort;
	}

	public void setSort(String sort) {
		this.sort = sort;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getValue() {
		return value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	public String getJp() {
		return jp;
	}

	public void setJp(String jp) {
		this.jp = jp;
	}

	public String getQp() {
		return qp;
	}

	public void setQp(String qp) {
		this.qp = qp;
	}

	public String getRemark() {
		return remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	public void parser(JSONObject jo) {
		// TODO Auto-generated method stub
		idStr = JsonUtil.getJsonString(jo, "id");
		createTime = JsonUtil.getJsonString(jo, "createTime");
		updateTime = JsonUtil.getJsonString(jo, "updateTime");
		sort = JsonUtil.getJsonString(jo, "sort");
		name = JsonUtil.getJsonString(jo, "name");
		value = JsonUtil.getJsonString(jo, "value");
		jp = JsonUtil.getJsonString(jo, "jp");
		qp = JsonUtil.getJsonString(jo, "qp");
		remark = JsonUtil.getJsonString(jo, "remark");

	}

	public JSONObject page() {
		// TODO Auto-generated method stub
		return null;
	}

	private static List<Age> list;

	public static void parserList(String jsonStr) {
		List<Age> ageList = new ArrayList<Age>();
		try {
			JSONArray ja = new JSONArray(jsonStr);
			for (int i = 0; i < ja.length(); i++) {
				JSONObject jo = ja.getJSONObject(i);
				Age age = new Age();
				age.parser(jo);
				GreenDaoService.getInstance().getDaoSession().getAgeDao()
						.insert(age);
				ageList.add(age);
			}
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (ageList.size() > 0) {
			list = ageList;

		}

	}

	public static void loadList() {
		if (list == null) {
			list = GreenDaoService.getInstance().getDaoSession().getAgeDao()
					.queryBuilder().list();
		}
		if (list == null || list.size() <= 0) {
			HttpAgeClient client = new HttpAgeClient();
			client.submitRequest();
		}
	}

	public static List<Age> getList() {
		return list;
	}

	public static Age queryAge(String id) {
		if (list == null) {
			return null;
		}
		for (int i = 0; i < list.size(); i++) {
			Age age = list.get(i);
			if (age.getIdStr().trim().equalsIgnoreCase(id.trim())) {
				return age;
			}
		}
		return null;
	}

}
